 local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local Window = Fluent:CreateWindow({
    Title = "Xiter Hub ",
    SubTitle = "or Xit Hub",
    TabWidth = 160,
    Size = UDim2.fromOffset(470, 250),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Amethyst",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

local ClickButton = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")
local TextButton = Instance.new("TextButton") 
local UICorner = Instance.new("UICorner") 
local UICorner_2 = Instance.new("UICorner")
if game.CoreGui:FindFirstChild("ClickButton") then 
game.CoreGui:FindFirstChild("ClickButton"):Destroy()
end
ClickButton.Name = "ClickButton"
ClickButton.Parent = game.CoreGui
ClickButton.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
MainFrame.Name = "MainFrame"
MainFrame.Parent = ClickButton
MainFrame.Active = true
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.BackgroundColor3 = Color3.new(1, 1, 1)
MainFrame.BorderColor3 = Color3.new(0, 0, 0)
MainFrame.BorderSizePixel = 0
MainFrame.Transparency = 1
MainFrame.Position = UDim2.new(0.187441245, 0, 0.476932675, 0)
MainFrame.Size = UDim2.new(0, 45, 0, 45)
UICorner.CornerRadius = UDim.new(0, 100)
UICorner.Parent = MainFrame
UICorner_2.CornerRadius = UDim.new(0, 100)
UICorner_2.Parent = ImageLabel
ImageLabel.Parent = MainFrame
ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel.BackgroundColor3 = Color3.new(0, 0, 0)
ImageLabel.BorderColor3 = Color3.new(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.Position = UDim2.new(0.48888889, 0, 0.48888889, 0)
ImageLabel.Size = UDim2.new(0, 45, 0, 45)
ImageLabel.Image = "rbxassetid://18807218823"
TextButton.Parent = MainFrame
TextButton.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton.BackgroundTransparency = 1
TextButton.BorderColor3 = Color3.new(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(3.3908421e-07, 0, 0, 0)
TextButton.Size = UDim2.new(0, 45, 0, 45)
TextButton.AutoButtonColor = false
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = ""
TextButton.TextColor3 = Color3.new(255, 255, 255)
TextButton.TextSize = 15

TextButton.MouseButton1Click:Connect(function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true,"LeftControl",false,game)
    game:GetService("VirtualInputManager"):SendKeyEvent(false,"LeftControl",false,game)
end)
  

pcall(function()
    for i, v in pairs(getconnections(game:GetService("ScriptContext").Error)) do
        v:Disable();
    end;
end);
--<>----<>----<>----<>----<>----<>----<>--

--<>----<>----<>----<>----<>----<>----<>--
local Workspace = game:GetService('Workspace');
local ReplicatedStorage = game:GetService('ReplicatedStorage');
local Players = game:GetService('Players');
local Client = Players.LocalPlayer;
local RunService = game:GetService('RunService');
local Workspace = game:GetService("Workspace");
local Lighting = game:GetService("Lighting");
local UIS = game:GetService("UserInputService");
local Teams = game:GetService("Teams");
local ScriptContext = game:GetService("ScriptContext");
local CoreGui = game:GetService("CoreGui");
local Camera = Workspace.CurrentCamera;
local Mouse = Client:GetMouse();
local Terrain = Workspace.Terrain;
local VirtualUser = game:GetService("VirtualUser");
--<>----<>----<>----<>----<>----<>----<>--
local Modules = ReplicatedStorage.Modules;
local EmoteModule = Modules.EmoteModule;
local Emotes = Client.PlayerGui.MainGUI.Game:FindFirstChild("Emotes");
local EmoteList = {"headless","zombie","zen","ninja","floss","dab"};
local CanGrab 
CanGrab = false;

local Origins = {{2,0,0},{-2,0,0},{0,2,0},{0,-2,0},{0,0,1},{0,0,-1}};

local GunHighlight = Instance.new("Highlight");
local GunHandleAdornment = Instance.new("SphereHandleAdornment");

GunHighlight.FillColor = Color3.fromRGB(248, 241, 174);
GunHighlight.Adornee = Workspace:FindFirstChild("GunDrop");
GunHighlight.OutlineTransparency = 1;
GunHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop;
GunHighlight.RobloxLocked = true;

GunHandleAdornment.Color3 = Color3.fromRGB(248, 241, 174);
GunHandleAdornment.Transparency = 0.2;
GunHandleAdornment.Adornee = Workspace:FindFirstChild("GunDrop");
GunHandleAdornment.AlwaysOnTop = true;
GunHandleAdornment.AdornCullingMode = Enum.AdornCullingMode.Never;
GunHandleAdornment.RobloxLocked = true;

GunHighlight.Parent = CoreGui;
GunHandleAdornment.Parent = CoreGui;

local TeleportDict = {
    ["Lobby"] = Vector3.new(-121.12338256836, 138.27394104004, 38.946128845215),
    ["Map"] = Vector3.new(-107.90824127197266, 138.34988403320312, -10.622464179992676),
};
local TeleportTable = {}
for i, v in pairs(TeleportDict) do
    table.insert(TeleportTable,i);
end;

local Murderer, Sheriff = nil, nil;

function GetMurderer()
    for i,v in pairs(Players:GetChildren()) do 
        if v.Backpack:FindFirstChild("Knife") or v.Character:FindFirstChild("Knife") and v.Name == "Tool" then
            return v.Name;
        end;
    end;
    return nil;
end;

function GetSheriff()
    for i,v in pairs(Players:GetChildren()) do 
        if v.Backpack:FindFirstChild("Gun") or v.Character:FindFirstChild("Gun") and v.Name == "Tool" then
            return v.Name;
        end;
        return nil;
    end;
end;
--<>----<>----<>----<>----<>----<>----<>--
local Character = nil;
local RootPart = nil;
local Humanoid = nil;

getgenv().WS = 16
getgenv().JP = 50
function SetCharVars()
	Character = Client.Character;
	Humanoid = Character:FindFirstChild("Humanoid") or Character:WaitForChild("Humanoid");
	RootPart = Character:FindFirstChild("HumanoidRootPart") or Character:WaitForChild("HumanoidRootPart");
	if getgenv().Speed then
		Humanoid.WalkSpeed = getgenv().WS;
	end;
	Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
		if getgenv().Speed then
			Humanoid.WalkSpeed = getgenv().WS;
		end;
	end);
    if getgenv().Jump then
		Humanoid.WalkSpeed = getgenv().JP;
	end;
	Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
		if getgenv().Jump then
			Humanoid.WalkSpeed = getgenv().JP;
		end;
	end);
end;
SetCharVars();
Client.CharacterAdded:Connect(SetCharVars);

local Ws;
Ws = hookmetamethod(game, "__index", function(self, Value)
    if tostring(self) == "Humanoid" and tostring(Value) == "WalkSpeed" then
        return 16;
    end;
    return Ws(self, Value);
end);

local Jp;
Jp = hookmetamethod(game, "__index", function(self, Value)
    if tostring(self) == "Humanoid" and tostring(Value) == "WalkSpeed" then
        return 16;
    end;
    return Jp(self, Value);
end);

--<>----<>----<>----<>----<>----<>----<>--


--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Info = Window:AddTab({ Title = "Info", Icon = "info" }),
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    Farms = Window:AddTab({ Title = "Farms", Icon = "box" }),
    
}

--<>----<>----<>----<>----<>----<>----<>--

Tabs.Info:AddButton({
    Title = "Discord:",
    Description = "https://discord.com/invite/PX7x5VeShC",
    Callback = function()
      setclipboard("https://discord.com/invite/PX7x5VeShC")
      game:GetService("StarterGui"):SetCore("SendNotification", { 
	Title = "Copied";
	Text = "Copied To Clipboard";
	Icon = "rbxassetid://18700386948"})
      end
})
Tabs.Info:AddParagraph({
    Title = "Developer: XiterDev7#0000",
    Content = ""
})

Tabs.Info:AddParagraph({
    Title = "Support Device:",
    Content = "Pc/Mobile"
}
)

--<>----<>----<>----<>----<>----<>----<>--


local ToggleKillAll = Tabs.Main:AddToggle("ToggleKillAll", {Title = "Kill All", Default = false })

    ToggleKillAll:OnChanged(function(state)
      pcall(function()
            local Knife = Client.Backpack:FindFirstChild("Knife") or Client.Character:FindFirstChild("Knife");
            if Knife.Parent.Name == "Backpack" then
                Humanoid:EquipTool(Knife);
            end;
            if Knife then
                if Knife:IsA("Tool") then
                    for i, v in ipairs(Players:GetPlayers()) do
                        if v ~= Client and v.Character ~= nil and not table.find(getgenv().Whitelisted,v.Name) then
                            local EnemyRoot = v.Character.HumanoidRootPart;
                            local EnemyPosition = EnemyRoot.Position;
                            VirtualUser:ClickButton1(Vector2.new());
                            firetouchinterest(EnemyRoot, Knife.Handle, 1);
                            firetouchinterest(EnemyRoot, Knife.Handle, 0);
                            lastAttack = tick();
                        end;
                    end;
                end;
            end;
        end);
      end)

local Section = Tabs.Main:AddSection("Basics")

local SliderWS = Tabs.Main:AddSlider("WS", {
        Title = "WalkSpeed",
        Description = "",
        Default = 16,
        Min = 16,
        Max = 200,
        Rounding = 1,
        Callback = function(val)
          getgenv().WS = tonumber(val)--tonumber(val / 10) or 0;
        Humanoid.WalkSpeed = val;
        end
    })

local SliderJP = Tabs.Main:AddSlider("JP", {
        Title = "JumpPower",
        Description = "",
        Default = 50,
        Min = 50,
        Max = 200,
        Rounding = 1,
        Callback = function(val)
          getgenv().JP = tonumber(val)--tonumber(val / 10) or 0;
        Humanoid.JumpPower = val;
        end
    })
  
  Tabs.Main:AddButton({
    Title = "God Mode",
    Description = "",
    Callback = function()
      GodMode()
		end
})

local accessories = {}
function GodMode()
    if game.Players.LocalPlayer.Character then
        if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
            for _, accessory in pairs(game.Players.LocalPlayer.Character.Humanoid:GetAccessories()) do
                table.insert(accessories, accessory:Clone())
            end
            game.Players.LocalPlayer.Character.Humanoid.Name = "boop"
        end
        local v = game.Players.LocalPlayer.Character["boop"]:Clone()
        v.Parent = game.Players.LocalPlayer.Character
        v.Name = "Humanoid"
        wait(0.1)
        game.Players.LocalPlayer.Character["boop"]:Destroy()
        workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
        for _, accessory in pairs(accessories) do
            game.Players.LocalPlayer.Character.Humanoid:AddAccessory(accessory)
        end
        game.Players.LocalPlayer.Character.Animate.Disabled = true
        wait(0.1)
        game.Players.LocalPlayer.Character.Animate.Disabled = false
    end
end

--<>----<>----<>----<>----<>----<>----<>--

local Section = Tabs.Main:AddSection("World")

local folder = Instance.new("Folder",CoreGui);
folder.Name = "ESP Holder";
	
local function AddBillboard(player)
    local billboard = Instance.new("BillboardGui",folder);
    billboard.Name = player.Name;
    billboard.AlwaysOnTop = true;
    billboard.Size = UDim2.fromOffset(200,50);
    billboard.ExtentsOffset = Vector3.new(0,3,0);
    billboard.Enabled = false

    local textLabel = Instance.new("TextLabel",billboard);
    textLabel.TextSize = 20;
    textLabel.Text = player.Name;
    textLabel.Font = Enum.Font.SourceSans;
    textLabel.BackgroundTransparency = 1;
    textLabel.Size = UDim2.fromScale(1,1);

    if getgenv().AllEsp then
        billboard.Enabled = true
    end
    repeat
        wait()
        pcall(function()
            billboard.Adornee = player.Character.Head;
            if player.Character:FindFirstChild("Knife") or player.Backpack:FindFirstChild("Knife") then
                textLabel.TextColor3 = Color3.new(1,0,0);
                if not billboard.Enabled and getgenv().MurderEsp then
                    billboard.Enabled = true
                end
            elseif player.Character:FindFirstChild("Gun") or player.Backpack:FindFirstChild("Gun") then
                textLabel.TextColor3 = Color3.new(0,0,1);
                if not billboard.Enabled and getgenv().SheriffEsp then
                    billboard.Enabled = true
                end
            else
                textLabel.TextColor3 = Color3.new(0,1,0);
            end;
        end);
    until not player.Parent;
end;

for _,player in pairs(Players:GetPlayers()) do
    if player ~= Client then
        coroutine.wrap(AddBillboard)(player);
    end;
end;
Players.PlayerAdded:Connect(AddBillboard);

Players.PlayerRemoving:Connect(function(player)
    folder[player.Name]:Destroy();
end);

local ToggleESPPlayers = Tabs.Main:AddToggle("ToggleESPPlayers", {Title = "ESP Players", Default = false })

    ToggleESPPlayers:OnChanged(function(state)
        getgenv().AllEsp = state;
        for i, v in pairs(folder:GetChildren()) do
            if v:IsA("BillboardGui") and Players[tostring(v.Name)] then
                if getgenv().AllEsp then
                    v.Enabled = true;
                else
                    v.Enabled = false;
                end;
            end;
        end;
    end)
local ToggleESPMurder = Tabs.Main:AddToggle("ToggleESPMurder", {Title = "ESP Murder", Default = false })

    ToggleESPMurder:OnChanged(function(state)
        getgenv().MurderEsp = state;
        while getgenv().MurderEsp do
            wait()
            pcall(function()
                for i, v in pairs(folder:GetChildren()) do
                    if v:IsA("BillboardGui") and Players[tostring(v.Name)] then
                        if Players[tostring(v.Name)].Character:FindFirstChild("Knife") or Players[tostring(v.Name)].Backpack:FindFirstChild("Knife")  then
                            if getgenv().MurderEsp then
                                v.Enabled = true;
                            else
                                v.Enabled = false;
                            end;
                        end
                    end;
                end;
            end);
        end;
    end)

local ToggleESPSheriff = Tabs.Main:AddToggle("ToggleESPSheriff", {Title = "ESP Sheriff", Default = false })

    ToggleESPSheriff:OnChanged(function(state)
        getgenv().SheriffEsp = state;
        while getgenv().SheriffEsp do
            wait()
            pcall(function()
                for i, v in pairs(folder:GetChildren()) do
                    if v:IsA("BillboardGui") and Players[tostring(v.Name)] then
                        if Players[tostring(v.Name)].Character:FindFirstChild("Gun") or Players[tostring(v.Name)].Backpack:FindFirstChild("Gun")  then
                            if getgenv().SheriffEsp then
                                v.Enabled = true;
                            else
                                v.Enabled = false;
                            end;
                        end
                    end;
                end;
            end);
        end;
    end)

local SectionGun = Tabs.Farms:AddSection("Gun")

local ToggleESPGun = Tabs.Farms:AddToggle("ToggleESPGun", {Title = "ESP Gun", Default = false })

    ToggleESPGun:OnChanged(function(state)
      getgenv().GunESP = state;
    end)
    
    coroutine.wrap(function()
    RunService.RenderStepped:Connect(function()
        pcall(function()
            if getgenv().GunESP then
                local gundrop = Workspace:FindFirstChild("GunDrop");
                GunHighlight.Adornee = gundrop;
                GunHandleAdornment.Adornee = gundrop;
                if gundrop then 
                    GunHandleAdornment.Size = gundrop.Size + Vector3.new(0.05, 0.05, 0.05) ;
                end;
        
                GunHighlight.Enabled = getgenv().GunESP;
                GunHandleAdornment.Visible = getgenv().GunESP;
            end;
        end);
    end);
end)();

local Keybind = Tabs.Farms:AddKeybind("Get Gun", {
        Title = "Get Gun",
        Mode = "Toggle", -- Always, Toggle, Hold
        Default = "Y", -- String as the name of the keybind (MB1, MB2 for mouse buttons)

        -- Occurs when the keybind is clicked, Value is `true`/`false`
        Callback = function(Value)
            if not CanGrab then return end
        local gundrop = Workspace:FindFirstChild("GunDrop");
        if gundrop and not lastCFrame then
            lastCFrame = RootPart.CFrame;
            pcall(function()
                repeat
                    RootPart.CFrame = gundrop.CFrame;
                    RunService.Stepped:Wait();
                until not gundrop:IsDescendantOf(Workspace);
                RootPart.CFrame = lastCFrame;
                lastCFrame = false;
            end);
        end;
        end
        })
      
      Fluent:Notify({
        Title = "Success",
        Content = "Xiter Hub",
        SubContent = "The Script Was Loading Completely",
        Duration = 8
    })